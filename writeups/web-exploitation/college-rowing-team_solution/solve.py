#!/usr/bin/env python3

from sympy import integer_nthroot
from binascii import unhexlify
from itertools import combinations

# קריאת הנתונים מהקובץ תוך דילוג על שורות ריקות
ns = []
cs = []
with open('encrypted-messages.txt', 'r') as f:
    lines = [line.strip() for line in f.readlines() if line.strip()]

for i in range(0, len(lines), 3):
    n_line = lines[i]
    c_line = lines[i+2]

    n = int(n_line.split(':')[1].strip())
    c = int(c_line.split(':')[1].strip())
    ns.append(n)
    cs.append(c)

# מימוש CRT
def chinese_remainder(n_list, a_list):
    N = 1
    for n in n_list:
        N *= n
    result = 0
    for n_i, a_i in zip(n_list, a_list):
        N_i = N // n_i
        inv = pow(N_i, -1, n_i)
        result += a_i * N_i * inv
    return result % N, N

# ניסיון כל הקומבינציות של 3 הודעות שונות
pairs = list(zip(ns, cs))
for combo in combinations(pairs, 3):
    chosen_n = [n for n, c in combo]
    chosen_c = [c for n, c in combo]

    C, N = chinese_remainder(chosen_n, chosen_c)
    m, exact = integer_nthroot(C, 3)

    if exact:
        try:
            plaintext = unhexlify(hex(m)[2:]).decode()
        except:
            continue

        if "picoCTF{" in plaintext:
            print(f"[+] FLAG found: {plaintext}")
            break
